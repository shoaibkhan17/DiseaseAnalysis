{"version":3,"sources":["components/RedirectIconButton.js","constants.js","components/TopBar.js","components/Graph.js","components/RedirectButton.js","components/HeartDisease.js","components/StrokeDisease.js","components/LiverDisease.js","components/DataVisualization.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["RedirectIconButton","render","history","Tooltip","title","props","IconButton","onClick","push","url","Icon","style","fontSize","alt","src","window","location","origin","iconName","React","Component","COLORS","DEFAULT_COLOR","PREDICTION_API_URL","endpoint","TopBar","state","flexGrow","AppBar","position","Toolbar","background","defaultData","name","probability","Graph","className","this","accuracy","ResponsiveContainer","width","height","BarChart","data","length","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Bar","fill","map","entry","index","Cell","strokeWidth","PureComponent","RedirectButton","Button","label","HeartDisease","age","sex","bloodPressure","chestPainType","serumCholesterol","maxHeartRate","exerciseAngina","bloodSugar","vesselsColored","results","handleClick","bind","firstColumn","secondColumn","thirdColumn","fourthColumn","heartDiseaseForm","extractResponse","a","obj","disease","axios","post","then","res","catch","error","console","log","diseaseProb","nonDiseaseProb","setState","Grid","container","direction","justify","alignItems","spacing","item","Typography","variant","paddingBottom","color","textDecoration","fullWidth","xs","TextField","placeholder","type","value","onChange","event","target","FormControl","InputLabel","Select","MenuItem","marginTop","minWidth","StrokeDisease","gender","bmi","hypertension","avgGlucoseLevel","heartDisease","strokeDiseaseForm","LiverDisease","totalProteins","totalBilirubin","alkalinePhosphatase","alamineAminotransferase","aspartateAminotransferase","albumin","albuminGlobulinRatio","liverDiseaseForm","DataVisualization","testGraph","maleToFemaleHeartDisease","chestPainToHeartDisease","exercisedToHeartDisease","exerciseToHeartDisease","fastingBloodToHeartDisease","vesselsColoredHeartDisease","LineChart","trestbps","chol","padding","Legend","Line","stroke","noDisease","overflowY","overflowX","Main","path","component","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.338ad9fb.chunk.js","sourcesContent":["import { IconButton, Icon, Tooltip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass RedirectIconButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <Route\r\n        render={({ history }) => (\r\n          <Tooltip title={this.props.title}>\r\n            <IconButton\r\n              onClick={() => {\r\n                history.push(this.props.url);\r\n              }}\r\n            >\r\n              <Icon style={{ fontSize: 35 }}>\r\n                <img\r\n                  alt=\"edit\"\r\n                  src={\r\n                    window.location.origin + \"/\" + this.props.iconName + \".ico\"\r\n                  }\r\n                />\r\n              </Icon>\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RedirectIconButton;\r\n","export const COLORS = [\"#a31545\", \"#357a38\"];\r\n\r\nexport const DEFAULT_COLOR =\r\n  \"linear-gradient(to top left, #ff0000 0%, #000000  112%)\";\r\n\r\nexport const BACKGROUND_COLOR =\r\n  \"radial-gradient(circle, rgb(212, 156, 156) 0%, rgb(110, 106, 106) 100%)\";\r\n\r\nvar endpoint =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:5000/\"\r\n    : \"https://diseaseanalysis.herokuapp.com/\";\r\n\r\nexport const PREDICTION_API_URL = endpoint + \"/predictDisease\";\r\n","import React from \"react\";\r\nimport { Toolbar, AppBar, IconButton, Icon } from \"@material-ui/core\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport RedirectIconButton from \"./RedirectIconButton\";\r\nimport { DEFAULT_COLOR } from \"../constants\";\r\n\r\nclass TopBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar\r\n            style={{\r\n              background: DEFAULT_COLOR,\r\n            }}\r\n          >\r\n            <RedirectIconButton\r\n              title=\"Heart Disease Prediction\"\r\n              iconName=\"heart\"\r\n              url=\"/heart-disease-prediction\"\r\n            />\r\n            <RedirectIconButton\r\n              title=\"Stroke Disease Prediction\"\r\n              iconName=\"head\"\r\n              url=\"/stroke-disease-prediction\"\r\n            />\r\n            <RedirectIconButton\r\n              title=\"Liver Disease Prediction\"\r\n              iconName=\"liver\"\r\n              url=\"/liver-disease-prediction\"\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Cell,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { COLORS } from \"../constants\";\r\n\r\nconst defaultData = [\r\n  {\r\n    name: \"Disease\",\r\n    probability: 0,\r\n  },\r\n  {\r\n    name: \"No Disease\",\r\n    probability: 0,\r\n  },\r\n];\r\n\r\nclass Graph extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"graphBox\">\r\n        {this.props.accuracy === 0 ? (\r\n          <br />\r\n        ) : (\r\n          \"Prediction Accuracy: \" + this.props.accuracy + \"%\"\r\n        )}\r\n        <ResponsiveContainer width=\"90%\" height=\"90%\">\r\n          <BarChart\r\n            width={500}\r\n            height={300}\r\n            data={this.props.data.length === 0 ? defaultData : this.props.data}\r\n            margin={{\r\n              top: 5,\r\n              right: 30,\r\n              left: 20,\r\n              bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Bar dataKey=\"probability\" fill=\"#000000\">\r\n              {this.props.data.map((entry, index) => (\r\n                <Cell\r\n                  key={`cell-${index}`}\r\n                  fill={COLORS[index]}\r\n                  strokeWidth={index === 2 ? 4 : 1}\r\n                />\r\n              ))}\r\n            </Bar>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n        Probability at risk of {this.props.title}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass RedirectButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <Route\r\n        render={({ history }) => (\r\n          <Button\r\n            onClick={() => {\r\n              history.push(this.props.url);\r\n            }}\r\n          >\r\n            {this.props.label}\r\n          </Button>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RedirectButton;\r\n","import React from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  FormControl,\r\n  Select,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport \"../styles/styles.css\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport Graph from \"./Graph\";\r\nimport { DEFAULT_COLOR, PREDICTION_API_URL } from \"../constants\";\r\nimport RedirectButton from \"./RedirectButton\";\r\n\r\nclass HeartDisease extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      age: 63,\r\n      sex: 1,\r\n      bloodPressure: 145,\r\n      chestPainType: 3,\r\n      serumCholesterol: 233,\r\n      maxHeartRate: 150,\r\n      exerciseAngina: 0,\r\n      bloodSugar: 1,\r\n      vesselsColored: 0,\r\n      accuracy: 0,\r\n      results: [],\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.firstColumn = this.firstColumn.bind(this);\r\n    this.secondColumn = this.secondColumn.bind(this);\r\n    this.thirdColumn = this.thirdColumn.bind(this);\r\n    this.fourthColumn = this.fourthColumn.bind(this);\r\n    this.heartDiseaseForm = this.heartDiseaseForm.bind(this);\r\n    this.extractResponse = this.extractResponse.bind(this);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  async handleClick() {\r\n    var obj = {\r\n      disease: \"heart\",\r\n      age: this.state.age,\r\n      sex: this.state.sex,\r\n      chestPainType: this.state.chestPainType,\r\n      bloodPressure: this.state.bloodPressure,\r\n      serumCholesterol: this.state.serumCholesterol,\r\n      bloodSugar: this.state.bloodSugar,\r\n      vesselsColored: this.state.vesselsColored,\r\n      maxHeartRate: this.state.maxHeartRate,\r\n      exerciseAngina: this.state.exerciseAngina,\r\n    };\r\n\r\n    axios\r\n      .post(PREDICTION_API_URL, obj)\r\n      .then((res) => this.extractResponse(res.data))\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  extractResponse(data) {\r\n    if (data === \"No Disease Option Specified\") {\r\n      return;\r\n    }\r\n\r\n    var results = [\r\n      {\r\n        name: \"Heart Disease\",\r\n        probability: data.diseaseProb,\r\n      },\r\n      {\r\n        name: \"No Heart Disease\",\r\n        probability: data.nonDiseaseProb,\r\n      },\r\n    ];\r\n\r\n    this.setState({ results: results });\r\n    this.setState({ accuracy: data.accuracy });\r\n  }\r\n\r\n  heartDiseaseForm() {\r\n    return (\r\n      <div className=\"box\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          alignItems=\"stretch\"\r\n          spacing={5}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"h6\"\r\n              style={{\r\n                paddingBottom: \"15px\",\r\n                color: \"#F51F1F\",\r\n                textDecoration: \"underline\",\r\n              }}\r\n            >\r\n              Enter Cardiovascular Parameters\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item>{this.firstColumn()}</Grid>\r\n\r\n          <Grid item>{this.secondColumn()}</Grid>\r\n\r\n          <Grid item>{this.thirdColumn()}</Grid>\r\n\r\n          <Grid item>{this.fourthColumn()}</Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              fullWidth\r\n              style={{\r\n                background: DEFAULT_COLOR,\r\n                color: \"white\",\r\n              }}\r\n              onClick={this.handleClick}\r\n            >\r\n              Predict\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            label=\"Age\"\r\n            placeholder=\"20\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.age}\r\n            onChange={(event) => this.setState({ age: event.target.value })}\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Sex</InputLabel>\r\n            <Select\r\n              label=\"Sex\"\r\n              value={this.state.sex}\r\n              onChange={(event) => this.setState({ sex: event.target.value })}\r\n            >\r\n              <MenuItem value={0}>Female</MenuItem>\r\n              <MenuItem value={1}>Male</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Chest Pain Type</InputLabel>\r\n            <Select\r\n              label=\"Chest Pain Type\"\r\n              value={this.state.chestPainType}\r\n              onChange={(event) =>\r\n                this.setState({ chestPainType: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={1}>1</MenuItem>\r\n              <MenuItem value={2}>2</MenuItem>\r\n              <MenuItem value={3}>3</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  secondColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={7}>\r\n          <TextField\r\n            label=\"Resting Blood Pressure (mm Hg)\"\r\n            placeholder=\"145\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.bloodPressure}\r\n            onChange={(event) =>\r\n              this.setState({ bloodPressure: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Exercise Induced Angina</InputLabel>\r\n            <Select\r\n              label=\">Exercise Induced Angina\"\r\n              value={this.state.exerciseAngina}\r\n              onChange={(event) =>\r\n                this.setState({ exerciseAngina: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={0}>No</MenuItem>\r\n              <MenuItem value={1}>Yes</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  thirdColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={7}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>\r\n              Fasting Blood Sugar {\"&\"} Glucose (120 mg/dl)\r\n            </InputLabel>\r\n            <Select\r\n              label={\"Fasting Blood Sugar & Glucose (120 mg/dl)\"}\r\n              value={this.state.bloodSugar}\r\n              onChange={(event) =>\r\n                this.setState({ bloodSugar: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={0}>No</MenuItem>\r\n              <MenuItem value={1}>Yes</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <TextField\r\n            label=\"Serum Cholesterol (mg/dl)\"\r\n            placeholder=\"233\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.serumCholesterol}\r\n            onChange={(event) =>\r\n              this.setState({ serumCholesterol: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  fourthColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Major Vessels Colored</InputLabel>\r\n            <Select\r\n              label={\"Major Vessels Colored\"}\r\n              value={this.state.vesselsColored}\r\n              onChange={(event) =>\r\n                this.setState({ vesselsColored: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={0}>0</MenuItem>\r\n              <MenuItem value={1}>1</MenuItem>\r\n              <MenuItem value={2}>2</MenuItem>\r\n              <MenuItem value={3}>3</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Maximum Heart Rate (BPM)\"\r\n            placeholder=\"150\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.maxHeartRate}\r\n            onChange={(event) =>\r\n              this.setState({ maxHeartRate: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"95vw\" }}>\r\n        <div style={{ marginTop: \"3vh\" }}>\r\n          <Typography variant=\"h4\">Heart Disease Prediction</Typography>\r\n\r\n          <RedirectButton\r\n            label=\"Click here for heart disease prediction\"\r\n            url=\"/heart-disease-visualization\"\r\n          />\r\n        </div>\r\n\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ flexGrow: 1, marginTop: \"5vh\" }}\r\n          spacing={5}\r\n        >\r\n          <Grid item style={{ minWidth: \"30vw\" }}>\r\n            {this.heartDiseaseForm()}\r\n          </Grid>\r\n          <Grid item style={{ minWidth: \"30vw\" }}>\r\n            <Graph\r\n              data={this.state.results}\r\n              title=\"Heart Disease\"\r\n              accuracy={this.state.accuracy}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeartDisease;\r\n","import React from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  FormControl,\r\n  Select,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport \"../styles/styles.css\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport Graph from \"./Graph\";\r\nimport { DEFAULT_COLOR, PREDICTION_API_URL } from \"../constants\";\r\n\r\nclass StrokeDisease extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      age: 67,\r\n      gender: 1,\r\n      bmi: 36.6,\r\n      hypertension: 0,\r\n      avgGlucoseLevel: 228.69,\r\n      heartDisease: 1,\r\n      accuracy: 0,\r\n      results: [],\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.firstColumn = this.firstColumn.bind(this);\r\n    this.secondColumn = this.secondColumn.bind(this);\r\n    this.thirdColumn = this.thirdColumn.bind(this);\r\n    this.strokeDiseaseForm = this.strokeDiseaseForm.bind(this);\r\n    this.extractResponse = this.extractResponse.bind(this);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  async handleClick() {\r\n    var obj = {\r\n      disease: \"stroke\",\r\n      age: this.state.age,\r\n      gender: this.state.gender,\r\n      bmi: this.state.bmi,\r\n      hypertension: this.state.hypertension,\r\n      avgGlucoseLevel: this.state.avgGlucoseLevel,\r\n      heartDisease: this.state.heartDisease,\r\n    };\r\n\r\n    axios\r\n      .post(PREDICTION_API_URL, obj)\r\n      .then((res) => this.extractResponse(res.data))\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  extractResponse(data) {\r\n    if (data === \"No Disease Option Specified\") {\r\n      return;\r\n    }\r\n\r\n    var results = [\r\n      {\r\n        name: \"Stroke Disease\",\r\n        probability: data.diseaseProb,\r\n      },\r\n      {\r\n        name: \"No Stroke Disease\",\r\n        probability: data.nonDiseaseProb,\r\n      },\r\n    ];\r\n\r\n    this.setState({ results: results });\r\n    this.setState({ accuracy: data.accuracy });\r\n  }\r\n\r\n  strokeDiseaseForm() {\r\n    return (\r\n      <div className=\"box\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          alignItems=\"stretch\"\r\n          spacing={5}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"h6\"\r\n              style={{\r\n                paddingBottom: \"15px\",\r\n                color: \"#F51F1F\",\r\n                textDecoration: \"underline\",\r\n              }}\r\n            >\r\n              Enter Stroke Disease Parameters\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item>{this.firstColumn()}</Grid>\r\n\r\n          <Grid item>{this.secondColumn()}</Grid>\r\n\r\n          <Grid item>{this.thirdColumn()}</Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              fullWidth\r\n              style={{\r\n                background: DEFAULT_COLOR,\r\n                color: \"white\",\r\n              }}\r\n              onClick={this.handleClick}\r\n            >\r\n              Predict\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Age\"\r\n            placeholder=\"20\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.age}\r\n            onChange={(event) => this.setState({ age: event.target.value })}\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Gender</InputLabel>\r\n            <Select\r\n              label=\"Gender\"\r\n              value={this.state.gender}\r\n              onChange={(event) =>\r\n                this.setState({ gender: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={0}>Female</MenuItem>\r\n              <MenuItem value={1}>Male</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  secondColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Hypertension</InputLabel>\r\n            <Select\r\n              label=\"Hypertension\"\r\n              value={this.state.hypertension}\r\n              onChange={(event) =>\r\n                this.setState({ hypertension: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={0}>No</MenuItem>\r\n              <MenuItem value={1}>Yes</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Heart Disease</InputLabel>\r\n            <Select\r\n              label=\"Heart Disease\"\r\n              value={this.state.heartDisease}\r\n              onChange={(event) =>\r\n                this.setState({ heartDisease: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={0}>No</MenuItem>\r\n              <MenuItem value={1}>Yes</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  thirdColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            label=\"Average Glucose Level (mmol/L)\"\r\n            placeholder=\"228.69\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.avgGlucoseLevel}\r\n            onChange={(event) =>\r\n              this.setState({ avgGlucoseLevel: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            label=\"BMI\"\r\n            placeholder=\"36.6\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.bmi}\r\n            onChange={(event) => this.setState({ bmi: event.target.value })}\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"95vw\" }}>\r\n        <div style={{ marginTop: \"3vh\" }}>\r\n          <Typography variant=\"h4\">Stroke Disease Prediction</Typography>\r\n          {/* \r\n          <RedirectButton\r\n            label=\"Click here for heart disease prediction\"\r\n            url=\"/heart-disease-visualization\"\r\n          /> */}\r\n        </div>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ flexGrow: 1, marginTop: \"5vh\" }}\r\n          spacing={5}\r\n        >\r\n          <Grid item style={{ minWidth: \"30vw\" }}>\r\n            {this.strokeDiseaseForm()}\r\n          </Grid>\r\n          <Grid item style={{ minWidth: \"30vw\" }}>\r\n            <Graph\r\n              data={this.state.results}\r\n              title=\"Stroke Disease\"\r\n              accuracy={this.state.accuracy}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StrokeDisease;\r\n","import React from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  FormControl,\r\n  Select,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport \"../styles/styles.css\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport Graph from \"./Graph\";\r\nimport { DEFAULT_COLOR, PREDICTION_API_URL } from \"../constants\";\r\n\r\nclass LiverDisease extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      age: 65,\r\n      gender: 0,\r\n      totalProteins: 6.8,\r\n      totalBilirubin: 0.7,\r\n      alkalinePhosphatase: 187,\r\n      alamineAminotransferase: 16,\r\n      aspartateAminotransferase: 18,\r\n      albumin: 3.3,\r\n      albuminGlobulinRatio: 0.9,\r\n      accuracy: 0,\r\n      results: [],\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.firstColumn = this.firstColumn.bind(this);\r\n    this.secondColumn = this.secondColumn.bind(this);\r\n    this.thirdColumn = this.thirdColumn.bind(this);\r\n    this.fourthColumn = this.fourthColumn.bind(this);\r\n    this.liverDiseaseForm = this.liverDiseaseForm.bind(this);\r\n    this.extractResponse = this.extractResponse.bind(this);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  async handleClick() {\r\n    var obj = {\r\n      disease: \"liver\",\r\n      age: this.state.age,\r\n      gender: this.state.gender,\r\n      totalProteins: this.state.totalProteins,\r\n      totalBilirubin: this.state.totalBilirubin,\r\n      alkalinePhosphatase: this.state.alkalinePhosphatase,\r\n      alamineAminotransferase: this.state.alamineAminotransferase,\r\n      aspartateAminotransferase: this.state.aspartateAminotransferase,\r\n      albumin: this.state.albumin,\r\n      albuminGlobulinRatio: this.state.albuminGlobulinRatio,\r\n    };\r\n\r\n    axios\r\n      .post(PREDICTION_API_URL, obj)\r\n      .then((res) => this.extractResponse(res.data))\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  extractResponse(data) {\r\n    if (data === \"No Disease Option Specified\") {\r\n      return;\r\n    }\r\n\r\n    var results = [\r\n      {\r\n        name: \"Liver Disease\",\r\n        probability: data.diseaseProb,\r\n      },\r\n      {\r\n        name: \"No Liver Disease\",\r\n        probability: data.nonDiseaseProb,\r\n      },\r\n    ];\r\n\r\n    this.setState({ results: results });\r\n    this.setState({ accuracy: data.accuracy });\r\n  }\r\n\r\n  liverDiseaseForm() {\r\n    return (\r\n      <div className=\"box\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          alignItems=\"stretch\"\r\n          spacing={5}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"h6\"\r\n              style={{\r\n                paddingBottom: \"15px\",\r\n                color: \"#F51F1F\",\r\n                textDecoration: \"underline\",\r\n              }}\r\n            >\r\n              Enter Liver Disease Parameters\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item>{this.firstColumn()}</Grid>\r\n\r\n          <Grid item>{this.secondColumn()}</Grid>\r\n\r\n          <Grid item>{this.thirdColumn()}</Grid>\r\n\r\n          <Grid item>{this.fourthColumn()}</Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              fullWidth\r\n              style={{\r\n                background: DEFAULT_COLOR,\r\n                color: \"white\",\r\n              }}\r\n              onClick={this.handleClick}\r\n            >\r\n              Predict\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            label=\"Age\"\r\n            placeholder=\"65\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.age}\r\n            onChange={(event) => this.setState({ age: event.target.value })}\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Gender</InputLabel>\r\n            <Select\r\n              label=\"Gender\"\r\n              value={this.state.gender}\r\n              onChange={(event) =>\r\n                this.setState({ gender: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={0}>Female</MenuItem>\r\n              <MenuItem value={1}>Male</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            label=\"Total Proteins\"\r\n            placeholder=\"6.8\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.totalProteins}\r\n            onChange={(event) =>\r\n              this.setState({ totalProteins: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  secondColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Total Bilirubin\"\r\n            placeholder=\"0.7\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.totalBilirubin}\r\n            onChange={(event) =>\r\n              this.setState({ totalBilirubin: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Alkaline Phosphatase\"\r\n            placeholder=\"187\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.alkalinePhosphatase}\r\n            onChange={(event) =>\r\n              this.setState({ alkalinePhosphatase: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  thirdColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Alamine Aminotransferase\"\r\n            placeholder=\"16\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.alamineAminotransferase}\r\n            onChange={(event) =>\r\n              this.setState({ alamineAminotransferase: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Aspartate Aminotransferase\"\r\n            placeholder=\"18\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.aspartateAminotransferase}\r\n            onChange={(event) =>\r\n              this.setState({ aspartateAminotransferase: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  fourthColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Albumin\"\r\n            placeholder=\"3.3\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.albumin}\r\n            onChange={(event) => this.setState({ albumin: event.target.value })}\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Albumin and Globulin Ratio\"\r\n            placeholder=\"0.9\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.albuminGlobulinRatio}\r\n            onChange={(event) =>\r\n              this.setState({ albuminGlobulinRatio: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"95vw\" }}>\r\n        <div style={{ marginTop: \"3vh\" }}>\r\n          <Typography variant=\"h4\">Liver Disease Prediction</Typography>\r\n\r\n          {/* <RedirectButton\r\n            label=\"Click here for heart disease prediction\"\r\n            url=\"/heart-disease-visualization\"\r\n          /> */}\r\n        </div>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ flexGrow: 1, marginTop: \"5vh\" }}\r\n          spacing={5}\r\n        >\r\n          <Grid item style={{ minWidth: \"30vw\" }}>\r\n            {this.liverDiseaseForm()}\r\n          </Grid>\r\n          <Grid item style={{ minWidth: \"30vw\" }}>\r\n            <Graph\r\n              data={this.state.results}\r\n              title=\"Liver Disease\"\r\n              accuracy={this.state.accuracy}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LiverDisease;\r\n","import React, { PureComponent } from \"react\";\r\nimport { Button, Typography, Grid } from \"@material-ui/core\";\r\nimport \"../styles/styles.css\";\r\nimport { COLORS } from \"../constants\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  BarChart,\r\n  Bar,\r\n} from \"recharts\";\r\nimport RedirectButton from \"./RedirectButton\";\r\n\r\nclass DataVisualization extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.testGraph = this.testGraph.bind(this);\r\n    this.maleToFemaleHeartDisease = this.maleToFemaleHeartDisease.bind(this);\r\n    this.chestPainToHeartDisease = this.chestPainToHeartDisease.bind(this);\r\n    this.exercisedToHeartDisease = this.exerciseToHeartDisease.bind(this);\r\n    this.fastingBloodToHeartDisease = this.fastingBloodToHeartDisease.bind(\r\n      this\r\n    );\r\n    this.vesselsColoredHeartDisease = this.vesselsColoredHeartDisease.bind(\r\n      this\r\n    );\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  testGraph() {\r\n    const data = [\r\n      {\r\n        name: \"Patient 1\",\r\n        trestbps: 145,\r\n        chol: 233,\r\n      },\r\n      {\r\n        name: \"Patient 2\",\r\n        trestbps: 130,\r\n        chol: 250,\r\n      },\r\n      {\r\n        name: \"Patient 3\",\r\n        trestbps: 130,\r\n        chol: 204,\r\n      },\r\n      {\r\n        name: \"Patient 4\",\r\n        trestbps: 120,\r\n        chol: 236,\r\n      },\r\n      {\r\n        name: \"Patient 5\",\r\n        trestbps: 120,\r\n        chol: 354,\r\n      },\r\n      {\r\n        name: \"Patient 6\",\r\n        trestbps: 140,\r\n        chol: 192,\r\n      },\r\n      {\r\n        name: \"Patient 7\",\r\n        trestbps: 120,\r\n        chol: 294,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"graphCard\">\r\n        <Typography>\r\n          Line chart of Resting blood pressure and maximum heart rate\r\n        </Typography>\r\n        <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n          <LineChart width={500} height={300} data={data}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" padding={{ left: 30, right: 30 }} />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"chol\" stroke=\"#8884d8\" />\r\n            <Line type=\"monotone\" dataKey=\"trestbps\" stroke=\"#82ca9d\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  chestPainToHeartDisease() {\r\n    const data = [\r\n      {\r\n        name: \"Typical Angina\",\r\n        heartDisease: 39,\r\n        noDisease: 102,\r\n      },\r\n      {\r\n        name: \"Atypical Angina\",\r\n        heartDisease: 41,\r\n        noDisease: 9,\r\n      },\r\n      {\r\n        name: \"Non-Anginal Pain\",\r\n        heartDisease: 68,\r\n        noDisease: 18,\r\n      },\r\n      {\r\n        name: \"Asymptomatic\",\r\n        heartDisease: 16,\r\n        noDisease: 7,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"graphCard\" style={{ minWidth: \"615px\" }}>\r\n        <Typography>\r\n          Number of Individuals with different types of chest pain\r\n        </Typography>\r\n        <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n          <BarChart\r\n            width={500}\r\n            height={300}\r\n            data={data}\r\n            margin={{\r\n              top: 5,\r\n              right: 30,\r\n              left: 20,\r\n              bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"heartDisease\" name=\"Heart Disease\" fill={COLORS[0]} />\r\n            <Bar dataKey=\"noDisease\" name=\"No Heart Disease\" fill={COLORS[1]} />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  vesselsColoredHeartDisease() {\r\n    const data = [\r\n      {\r\n        name: \"0\",\r\n        heartDisease: 129,\r\n        noDisease: 44,\r\n      },\r\n      {\r\n        name: \"1\",\r\n        heartDisease: 21,\r\n        noDisease: 44,\r\n      },\r\n      {\r\n        name: \"2\",\r\n        heartDisease: 7,\r\n        noDisease: 31,\r\n      },\r\n      {\r\n        name: \"3\",\r\n        heartDisease: 3,\r\n        noDisease: 17,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"graphCard\" style={{ width: \"420px\" }}>\r\n        <Typography>\r\n          Number of major vessels (0-3) colored by fluoroscopy\r\n        </Typography>\r\n        <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n          <BarChart\r\n            width={500}\r\n            height={300}\r\n            data={data}\r\n            margin={{\r\n              top: 5,\r\n              right: 30,\r\n              left: 20,\r\n              bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"heartDisease\" name=\"Heart Disease\" fill={COLORS[0]} />\r\n            <Bar dataKey=\"noDisease\" name=\"No Heart Disease\" fill={COLORS[1]} />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  fastingBloodToHeartDisease() {\r\n    const data = [\r\n      {\r\n        name: \"Fasting blood sugar & glucose at level\",\r\n        heartDisease: 23,\r\n        noDisease: 23,\r\n      },\r\n      {\r\n        name: \"Fasting blood sugar & glucose not at level\",\r\n        heartDisease: 141,\r\n        noDisease: 116,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"graphCard\" style={{ minWidth: \"711px\" }}>\r\n        <Typography>\r\n          Number of Individuals with fasting blood sugar {\"&\"} glucose at level\r\n        </Typography>\r\n        <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n          <BarChart\r\n            width={500}\r\n            height={300}\r\n            data={data}\r\n            margin={{\r\n              top: 5,\r\n              right: 30,\r\n              left: 20,\r\n              bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"heartDisease\" name=\"Heart Disease\" fill={COLORS[0]} />\r\n            <Bar dataKey=\"noDisease\" name=\"No Heart Disease\" fill={COLORS[1]} />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  exerciseToHeartDisease() {\r\n    const data = [\r\n      {\r\n        name: \"Exercise Induced Angina\",\r\n        heartDisease: 23,\r\n        noDisease: 74,\r\n      },\r\n      {\r\n        name: \"No Exercise Induced Angina\",\r\n        heartDisease: 141,\r\n        noDisease: 62,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"graphCard\" style={{ minWidth: \"575px\" }}>\r\n        <Typography>\r\n          Number of Individuals with Exercise Induced Angina\r\n        </Typography>\r\n        <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n          <BarChart\r\n            width={500}\r\n            height={300}\r\n            data={data}\r\n            margin={{\r\n              top: 5,\r\n              right: 30,\r\n              left: 20,\r\n              bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"heartDisease\" name=\"Heart Disease\" fill={COLORS[0]} />\r\n            <Bar dataKey=\"noDisease\" name=\"No Heart Disease\" fill={COLORS[1]} />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  maleToFemaleHeartDisease() {\r\n    const data = [\r\n      {\r\n        name: \"Male\",\r\n        heartDisease: 93,\r\n        noDisease: 112,\r\n      },\r\n      {\r\n        name: \"Female\",\r\n        heartDisease: 71,\r\n        noDisease: 24,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"graphCard\">\r\n        <Typography>Gender Radio</Typography>\r\n        <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n          <BarChart\r\n            width={500}\r\n            height={300}\r\n            data={data}\r\n            margin={{\r\n              top: 5,\r\n              right: 30,\r\n              left: 20,\r\n              bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"heartDisease\" name=\"Heart Disease\" fill={COLORS[0]} />\r\n            <Bar dataKey=\"noDisease\" name=\"No Heart Disease\" fill={COLORS[1]} />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100vw\",\r\n          height: \"90vh\",\r\n          overflowY: \"auto\",\r\n          overflowX: \"hidden\",\r\n        }}\r\n      >\r\n        <div style={{ marginTop: \"3vh\" }}>\r\n          <Typography variant=\"h4\">Heart Disease Visualization</Typography>\r\n\r\n          <RedirectButton\r\n            label=\"Click here for an interactive heart disease prediction\"\r\n            url=\"/heart-disease-prediction\"\r\n          />\r\n        </div>\r\n\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ flexGrow: 1, marginTop: \"2vh\" }}\r\n          spacing={5}\r\n        >\r\n          <Grid item> {this.testGraph()} </Grid>\r\n          <Grid item> {this.exerciseToHeartDisease()} </Grid>\r\n          <Grid item> {this.maleToFemaleHeartDisease()} </Grid>\r\n          <Grid item> {this.chestPainToHeartDisease()} </Grid>\r\n          <Grid item> {this.fastingBloodToHeartDisease()} </Grid>\r\n          <Grid item> {this.vesselsColoredHeartDisease()} </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataVisualization;\r\n","import React from \"react\";\r\nimport TopBar from \"./TopBar\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport HeartDisease from \"./HeartDisease\";\r\nimport { BACKGROUND_COLOR } from \"../constants\";\r\nimport StrokeDisease from \"./StrokeDisease\";\r\nimport LiverDisease from \"./LiverDisease\";\r\nimport DataVisualization from \"./DataVisualization\";\r\n\r\nclass Main extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          background: BACKGROUND_COLOR,\r\n        }}\r\n      >\r\n        <Router>\r\n          <TopBar />\r\n          <Switch>\r\n            <Route\r\n              path=\"/heart-disease-prediction\"\r\n              component={() => <HeartDisease />}\r\n            />\r\n\r\n            <Route\r\n              path=\"/heart-disease-visualization\"\r\n              component={() => <DataVisualization />}\r\n            />\r\n\r\n            <Route\r\n              path=\"/stroke-disease-prediction\"\r\n              component={() => <StrokeDisease />}\r\n            />\r\n\r\n            <Route\r\n              path=\"/liver-disease-prediction\"\r\n              component={() => <LiverDisease />}\r\n            />\r\n\r\n            <Route render={() => <Redirect to=\"/heart-disease-prediction\" />} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import \"./App.css\";\r\nimport Main from \"./components/Main\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}