{"version":3,"sources":["components/RedirectIconButton.js","constants.js","components/TopBar.js","components/Graph.js","components/HeartDisease.js","components/StrokeDisease.js","components/LiverDisease.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["RedirectIconButton","render","history","Tooltip","title","props","IconButton","onClick","push","url","Icon","style","fontSize","alt","src","window","location","origin","iconName","React","Component","COLORS","DEFAULT_COLOR","PREDICTION_API_URL","endpoint","TopBar","state","flexGrow","AppBar","position","Toolbar","background","defaultData","name","probability","Graph","className","this","accuracy","ResponsiveContainer","width","height","BarChart","data","length","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Bar","fill","map","entry","index","Cell","strokeWidth","PureComponent","HeartDisease","age","sex","bloodPressure","chestPainType","serumCholesterol","maxHeartRate","exerciseAngina","bloodSugar","vesselsColored","results","handleClick","bind","firstColumn","secondColumn","thirdColumn","fourthColumn","heartDiseaseForm","extractResponse","a","obj","disease","axios","post","then","res","catch","error","console","log","diseaseProb","nonDiseaseProb","setState","Grid","container","direction","justify","alignItems","spacing","item","Typography","variant","paddingBottom","color","textDecoration","Button","fullWidth","xs","TextField","label","placeholder","type","value","onChange","event","target","FormControl","InputLabel","Select","MenuItem","marginTop","minWidth","StrokeDisease","gender","bmi","hypertension","avgGlucoseLevel","heartDisease","strokeDiseaseForm","LiverDisease","totalProteins","totalBilirubin","alkalinePhosphatase","alamineAminotransferase","aspartateAminotransferase","albumin","albuminGlobulinRatio","liverDiseaseForm","Main","path","component","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b7dec63.chunk.js","sourcesContent":["import { IconButton, Icon, Tooltip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass RedirectIconButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <Route\r\n        render={({ history }) => (\r\n          <Tooltip title={this.props.title}>\r\n            <IconButton\r\n              onClick={() => {\r\n                history.push(this.props.url);\r\n              }}\r\n            >\r\n              <Icon style={{ fontSize: 35 }}>\r\n                <img\r\n                  alt=\"edit\"\r\n                  src={\r\n                    window.location.origin + \"/\" + this.props.iconName + \".ico\"\r\n                  }\r\n                />\r\n              </Icon>\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RedirectIconButton;\r\n","export const COLORS = [\"#a31545\", \"#357a38\"];\r\n\r\nexport const DEFAULT_COLOR =\r\n  \"linear-gradient(to top left, #ff0000 0%, #000000  112%)\";\r\n\r\nexport const BACKGROUND_COLOR =\r\n  \"radial-gradient(circle, rgb(212, 156, 156) 0%, rgb(110, 106, 106) 100%)\";\r\n\r\nvar endpoint =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:5000/\"\r\n    : \"https://diseaseanalysis.herokuapp.com/\";\r\n\r\nexport const PREDICTION_API_URL = endpoint + \"/predictDisease\";\r\n","import React from \"react\";\r\nimport { Toolbar, AppBar, IconButton, Icon } from \"@material-ui/core\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport RedirectIconButton from \"./RedirectIconButton\";\r\nimport { DEFAULT_COLOR } from \"../constants\";\r\n\r\nclass TopBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar\r\n            style={{\r\n              background: DEFAULT_COLOR,\r\n            }}\r\n          >\r\n            <RedirectIconButton\r\n              title=\"Heart Disease Prediction\"\r\n              iconName=\"heart\"\r\n              url=\"/heart-disease-prediction\"\r\n            />\r\n            <RedirectIconButton\r\n              title=\"Stroke Disease Prediction\"\r\n              iconName=\"head\"\r\n              url=\"/stroke-disease-prediction\"\r\n            />\r\n            <RedirectIconButton\r\n              title=\"Liver Disease Prediction\"\r\n              iconName=\"liver\"\r\n              url=\"/liver-disease-prediction\"\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Cell,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { COLORS } from \"../constants\";\r\n\r\nconst defaultData = [\r\n  {\r\n    name: \"Disease\",\r\n    probability: 0,\r\n  },\r\n  {\r\n    name: \"No Disease\",\r\n    probability: 0,\r\n  },\r\n];\r\n\r\nclass Graph extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"graphBox\">\r\n        {this.props.accuracy === 0 ? (\r\n          <br />\r\n        ) : (\r\n          \"Prediction Accuracy: \" + this.props.accuracy + \"%\"\r\n        )}\r\n        <ResponsiveContainer width=\"90%\" height=\"90%\">\r\n          <BarChart\r\n            width={500}\r\n            height={300}\r\n            data={this.props.data.length === 0 ? defaultData : this.props.data}\r\n            margin={{\r\n              top: 5,\r\n              right: 30,\r\n              left: 20,\r\n              bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Bar dataKey=\"probability\" fill=\"#000000\">\r\n              {this.props.data.map((entry, index) => (\r\n                <Cell\r\n                  key={`cell-${index}`}\r\n                  fill={COLORS[index]}\r\n                  strokeWidth={index === 2 ? 4 : 1}\r\n                />\r\n              ))}\r\n            </Bar>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n        Probability at risk of {this.props.title}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n","import React from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  FormControl,\r\n  Select,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport \"../styles/styles.css\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport Graph from \"./Graph\";\r\nimport { DEFAULT_COLOR, PREDICTION_API_URL } from \"../constants\";\r\n\r\nclass HeartDisease extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      age: 63,\r\n      sex: 1,\r\n      bloodPressure: 145,\r\n      chestPainType: 3,\r\n      serumCholesterol: 233,\r\n      maxHeartRate: 150,\r\n      exerciseAngina: 0,\r\n      bloodSugar: 1,\r\n      vesselsColored: 0,\r\n      accuracy: 0,\r\n      results: [],\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.firstColumn = this.firstColumn.bind(this);\r\n    this.secondColumn = this.secondColumn.bind(this);\r\n    this.thirdColumn = this.thirdColumn.bind(this);\r\n    this.fourthColumn = this.fourthColumn.bind(this);\r\n    this.heartDiseaseForm = this.heartDiseaseForm.bind(this);\r\n    this.extractResponse = this.extractResponse.bind(this);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  async handleClick() {\r\n    var obj = {\r\n      disease: \"heart\",\r\n      age: this.state.age,\r\n      sex: this.state.sex,\r\n      chestPainType: this.state.chestPainType,\r\n      bloodPressure: this.state.bloodPressure,\r\n      serumCholesterol: this.state.serumCholesterol,\r\n      bloodSugar: this.state.bloodSugar,\r\n      vesselsColored: this.state.vesselsColored,\r\n      maxHeartRate: this.state.maxHeartRate,\r\n      exerciseAngina: this.state.exerciseAngina,\r\n    };\r\n\r\n    axios\r\n      .post(PREDICTION_API_URL, obj)\r\n      .then((res) => this.extractResponse(res.data))\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  extractResponse(data) {\r\n    if (data === \"No Disease Option Specified\") {\r\n      return;\r\n    }\r\n\r\n    var results = [\r\n      {\r\n        name: \"Heart Disease\",\r\n        probability: data.diseaseProb,\r\n      },\r\n      {\r\n        name: \"No Heart Disease\",\r\n        probability: data.nonDiseaseProb,\r\n      },\r\n    ];\r\n\r\n    this.setState({ results: results });\r\n    this.setState({ accuracy: data.accuracy });\r\n  }\r\n\r\n  heartDiseaseForm() {\r\n    return (\r\n      <div className=\"box\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          alignItems=\"stretch\"\r\n          spacing={5}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"h6\"\r\n              style={{\r\n                paddingBottom: \"15px\",\r\n                color: \"#F51F1F\",\r\n                textDecoration: \"underline\",\r\n              }}\r\n            >\r\n              Enter Cardiovascular Parameters\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item>{this.firstColumn()}</Grid>\r\n\r\n          <Grid item>{this.secondColumn()}</Grid>\r\n\r\n          <Grid item>{this.thirdColumn()}</Grid>\r\n\r\n          <Grid item>{this.fourthColumn()}</Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              fullWidth\r\n              style={{\r\n                background: DEFAULT_COLOR,\r\n                color: \"white\",\r\n              }}\r\n              onClick={this.handleClick}\r\n            >\r\n              Predict\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            label=\"Age\"\r\n            placeholder=\"20\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.age}\r\n            onChange={(event) => this.setState({ age: event.target.value })}\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Sex</InputLabel>\r\n            <Select\r\n              label=\"Sex\"\r\n              value={this.state.sex}\r\n              onChange={(event) => this.setState({ sex: event.target.value })}\r\n            >\r\n              <MenuItem value={0}>Female</MenuItem>\r\n              <MenuItem value={1}>Male</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Chest Pain Type</InputLabel>\r\n            <Select\r\n              label=\"Chest Pain Type\"\r\n              value={this.state.chestPainType}\r\n              onChange={(event) =>\r\n                this.setState({ chestPainType: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={1}>1</MenuItem>\r\n              <MenuItem value={2}>2</MenuItem>\r\n              <MenuItem value={3}>3</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  secondColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={7}>\r\n          <TextField\r\n            label=\"Resting Blood Pressure (mm Hg)\"\r\n            placeholder=\"145\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.bloodPressure}\r\n            onChange={(event) =>\r\n              this.setState({ bloodPressure: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Exercise Induced Angina</InputLabel>\r\n            <Select\r\n              label=\">Exercise Induced Angina\"\r\n              value={this.state.exerciseAngina}\r\n              onChange={(event) =>\r\n                this.setState({ exerciseAngina: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={0}>No</MenuItem>\r\n              <MenuItem value={1}>Yes</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  thirdColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={7}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>\r\n              Fasting Blood Sugar {\"&\"} Glucose (120 mg/dl)\r\n            </InputLabel>\r\n            <Select\r\n              label={\"Fasting Blood Sugar & Glucose (120 mg/dl)\"}\r\n              value={this.state.bloodSugar}\r\n              onChange={(event) =>\r\n                this.setState({ bloodSugar: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={0}>No</MenuItem>\r\n              <MenuItem value={1}>Yes</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <TextField\r\n            label=\"Serum Cholesterol (mg/dl)\"\r\n            placeholder=\"233\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.serumCholesterol}\r\n            onChange={(event) =>\r\n              this.setState({ serumCholesterol: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  fourthColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Major Vessels Colored</InputLabel>\r\n            <Select\r\n              label={\"Major Vessels Colored\"}\r\n              value={this.state.vesselsColored}\r\n              onChange={(event) =>\r\n                this.setState({ vesselsColored: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={0}>0</MenuItem>\r\n              <MenuItem value={1}>1</MenuItem>\r\n              <MenuItem value={2}>2</MenuItem>\r\n              <MenuItem value={3}>3</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Maximum Heart Rate (BPM)\"\r\n            placeholder=\"150\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.maxHeartRate}\r\n            onChange={(event) =>\r\n              this.setState({ maxHeartRate: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"95vw\" }}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ flexGrow: 1, marginTop: \"10vh\" }}\r\n          spacing={5}\r\n        >\r\n          <Grid item style={{ minWidth: \"30vw\" }}>\r\n            {this.heartDiseaseForm()}\r\n          </Grid>\r\n          <Grid item style={{ minWidth: \"30vw\" }}>\r\n            <Graph\r\n              data={this.state.results}\r\n              title=\"Heart Disease\"\r\n              accuracy={this.state.accuracy}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeartDisease;\r\n","import React from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  FormControl,\r\n  Select,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport \"../styles/styles.css\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport Graph from \"./Graph\";\r\nimport { DEFAULT_COLOR, PREDICTION_API_URL } from \"../constants\";\r\n\r\nclass StrokeDisease extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      age: 67,\r\n      gender: 1,\r\n      bmi: 36.6,\r\n      hypertension: 0,\r\n      avgGlucoseLevel: 228.69,\r\n      heartDisease: 1,\r\n      accuracy: 0,\r\n      results: [],\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.firstColumn = this.firstColumn.bind(this);\r\n    this.secondColumn = this.secondColumn.bind(this);\r\n    this.thirdColumn = this.thirdColumn.bind(this);\r\n    this.strokeDiseaseForm = this.strokeDiseaseForm.bind(this);\r\n    this.extractResponse = this.extractResponse.bind(this);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  async handleClick() {\r\n    var obj = {\r\n      disease: \"stroke\",\r\n      age: this.state.age,\r\n      gender: this.state.gender,\r\n      bmi: this.state.bmi,\r\n      hypertension: this.state.hypertension,\r\n      avgGlucoseLevel: this.state.avgGlucoseLevel,\r\n      heartDisease: this.state.heartDisease,\r\n    };\r\n\r\n    axios\r\n      .post(PREDICTION_API_URL, obj)\r\n      .then((res) => this.extractResponse(res.data))\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  extractResponse(data) {\r\n    if (data === \"No Disease Option Specified\") {\r\n      return;\r\n    }\r\n\r\n    var results = [\r\n      {\r\n        name: \"Stroke Disease\",\r\n        probability: data.diseaseProb,\r\n      },\r\n      {\r\n        name: \"No Stroke Disease\",\r\n        probability: data.nonDiseaseProb,\r\n      },\r\n    ];\r\n\r\n    this.setState({ results: results });\r\n    this.setState({ accuracy: data.accuracy });\r\n  }\r\n\r\n  strokeDiseaseForm() {\r\n    return (\r\n      <div className=\"box\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          alignItems=\"stretch\"\r\n          spacing={5}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"h6\"\r\n              style={{\r\n                paddingBottom: \"15px\",\r\n                color: \"#F51F1F\",\r\n                textDecoration: \"underline\",\r\n              }}\r\n            >\r\n              Enter Stroke Disease Parameters\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item>{this.firstColumn()}</Grid>\r\n\r\n          <Grid item>{this.secondColumn()}</Grid>\r\n\r\n          <Grid item>{this.thirdColumn()}</Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              fullWidth\r\n              style={{\r\n                background: DEFAULT_COLOR,\r\n                color: \"white\",\r\n              }}\r\n              onClick={this.handleClick}\r\n            >\r\n              Predict\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Age\"\r\n            placeholder=\"20\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.age}\r\n            onChange={(event) => this.setState({ age: event.target.value })}\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Gender</InputLabel>\r\n            <Select\r\n              label=\"Gender\"\r\n              value={this.state.gender}\r\n              onChange={(event) =>\r\n                this.setState({ gender: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={0}>Female</MenuItem>\r\n              <MenuItem value={1}>Male</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  secondColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Hypertension</InputLabel>\r\n            <Select\r\n              label=\"Hypertension\"\r\n              value={this.state.hypertension}\r\n              onChange={(event) =>\r\n                this.setState({ hypertension: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={0}>No</MenuItem>\r\n              <MenuItem value={1}>Yes</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Heart Disease</InputLabel>\r\n            <Select\r\n              label=\"Heart Disease\"\r\n              value={this.state.heartDisease}\r\n              onChange={(event) =>\r\n                this.setState({ heartDisease: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={0}>No</MenuItem>\r\n              <MenuItem value={1}>Yes</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  thirdColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            label=\"Average Glucose Level (mmol/L)\"\r\n            placeholder=\"228.69\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.avgGlucoseLevel}\r\n            onChange={(event) =>\r\n              this.setState({ avgGlucoseLevel: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            label=\"BMI\"\r\n            placeholder=\"36.6\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.bmi}\r\n            onChange={(event) => this.setState({ bmi: event.target.value })}\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"95vw\" }}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ flexGrow: 1, marginTop: \"10vh\" }}\r\n          spacing={5}\r\n        >\r\n          <Grid item style={{ minWidth: \"30vw\" }}>\r\n            {this.strokeDiseaseForm()}\r\n          </Grid>\r\n          <Grid item style={{ minWidth: \"30vw\" }}>\r\n            <Graph\r\n              data={this.state.results}\r\n              title=\"Stroke Disease\"\r\n              accuracy={this.state.accuracy}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StrokeDisease;\r\n","import React from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  FormControl,\r\n  Select,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport \"../styles/styles.css\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport Graph from \"./Graph\";\r\nimport { DEFAULT_COLOR, PREDICTION_API_URL } from \"../constants\";\r\n\r\nclass LiverDisease extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      age: 65,\r\n      gender: 0,\r\n      totalProteins: 6.8,\r\n      totalBilirubin: 0.7,\r\n      alkalinePhosphatase: 187,\r\n      alamineAminotransferase: 16,\r\n      aspartateAminotransferase: 18,\r\n      albumin: 3.3,\r\n      albuminGlobulinRatio: 0.9,\r\n      accuracy: 0,\r\n      results: [],\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.firstColumn = this.firstColumn.bind(this);\r\n    this.secondColumn = this.secondColumn.bind(this);\r\n    this.thirdColumn = this.thirdColumn.bind(this);\r\n    this.fourthColumn = this.fourthColumn.bind(this);\r\n    this.liverDiseaseForm = this.liverDiseaseForm.bind(this);\r\n    this.extractResponse = this.extractResponse.bind(this);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  async handleClick() {\r\n    var obj = {\r\n      disease: \"liver\",\r\n      age: this.state.age,\r\n      gender: this.state.gender,\r\n      totalProteins: this.state.totalProteins,\r\n      totalBilirubin: this.state.totalBilirubin,\r\n      alkalinePhosphatase: this.state.alkalinePhosphatase,\r\n      alamineAminotransferase: this.state.alamineAminotransferase,\r\n      aspartateAminotransferase: this.state.aspartateAminotransferase,\r\n      albumin: this.state.albumin,\r\n      albuminGlobulinRatio: this.state.albuminGlobulinRatio,\r\n    };\r\n\r\n    axios\r\n      .post(PREDICTION_API_URL, obj)\r\n      .then((res) => this.extractResponse(res.data))\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  extractResponse(data) {\r\n    if (data === \"No Disease Option Specified\") {\r\n      return;\r\n    }\r\n\r\n    var results = [\r\n      {\r\n        name: \"Liver Disease\",\r\n        probability: data.diseaseProb,\r\n      },\r\n      {\r\n        name: \"No Liver Disease\",\r\n        probability: data.nonDiseaseProb,\r\n      },\r\n    ];\r\n\r\n    this.setState({ results: results });\r\n    this.setState({ accuracy: data.accuracy });\r\n  }\r\n\r\n  liverDiseaseForm() {\r\n    return (\r\n      <div className=\"box\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          alignItems=\"stretch\"\r\n          spacing={5}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"h6\"\r\n              style={{\r\n                paddingBottom: \"15px\",\r\n                color: \"#F51F1F\",\r\n                textDecoration: \"underline\",\r\n              }}\r\n            >\r\n              Enter Liver Disease Parameters\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item>{this.firstColumn()}</Grid>\r\n\r\n          <Grid item>{this.secondColumn()}</Grid>\r\n\r\n          <Grid item>{this.thirdColumn()}</Grid>\r\n\r\n          <Grid item>{this.fourthColumn()}</Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              fullWidth\r\n              style={{\r\n                background: DEFAULT_COLOR,\r\n                color: \"white\",\r\n              }}\r\n              onClick={this.handleClick}\r\n            >\r\n              Predict\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  firstColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            label=\"Age\"\r\n            placeholder=\"65\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.age}\r\n            onChange={(event) => this.setState({ age: event.target.value })}\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel>Gender</InputLabel>\r\n            <Select\r\n              label=\"Gender\"\r\n              value={this.state.gender}\r\n              onChange={(event) =>\r\n                this.setState({ gender: event.target.value })\r\n              }\r\n            >\r\n              <MenuItem value={0}>Female</MenuItem>\r\n              <MenuItem value={1}>Male</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            label=\"Total Proteins\"\r\n            placeholder=\"6.8\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.totalProteins}\r\n            onChange={(event) =>\r\n              this.setState({ totalProteins: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  secondColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Total Bilirubin\"\r\n            placeholder=\"0.7\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.totalBilirubin}\r\n            onChange={(event) =>\r\n              this.setState({ totalBilirubin: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Alkaline Phosphatase\"\r\n            placeholder=\"187\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.alkalinePhosphatase}\r\n            onChange={(event) =>\r\n              this.setState({ alkalinePhosphatase: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  thirdColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Alamine Aminotransferase\"\r\n            placeholder=\"16\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.alamineAminotransferase}\r\n            onChange={(event) =>\r\n              this.setState({ alamineAminotransferase: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Aspartate Aminotransferase\"\r\n            placeholder=\"18\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.aspartateAminotransferase}\r\n            onChange={(event) =>\r\n              this.setState({ aspartateAminotransferase: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  fourthColumn() {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Albumin\"\r\n            placeholder=\"3.3\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.albumin}\r\n            onChange={(event) => this.setState({ albumin: event.target.value })}\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Albumin and Globulin Ratio\"\r\n            placeholder=\"0.9\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            value={this.state.albuminGlobulinRatio}\r\n            onChange={(event) =>\r\n              this.setState({ albuminGlobulinRatio: event.target.value })\r\n            }\r\n            style={{ paddingBottom: \"4%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"95vw\" }}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ flexGrow: 1, marginTop: \"10vh\" }}\r\n          spacing={5}\r\n        >\r\n          <Grid item style={{ minWidth: \"30vw\" }}>\r\n            {this.liverDiseaseForm()}\r\n          </Grid>\r\n          <Grid item style={{ minWidth: \"30vw\" }}>\r\n            <Graph\r\n              data={this.state.results}\r\n              title=\"Liver Disease\"\r\n              accuracy={this.state.accuracy}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LiverDisease;\r\n","import React from \"react\";\r\nimport TopBar from \"./TopBar\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport HeartDisease from \"./HeartDisease\";\r\nimport { BACKGROUND_COLOR } from \"../constants\";\r\nimport StrokeDisease from \"./StrokeDisease\";\r\nimport LiverDisease from \"./LiverDisease\";\r\n\r\nclass Main extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          background: BACKGROUND_COLOR,\r\n        }}\r\n      >\r\n        <Router>\r\n          <TopBar />\r\n          <Switch>\r\n            <Route\r\n              path=\"/heart-disease-prediction\"\r\n              component={() => <HeartDisease />}\r\n            />\r\n            <Route\r\n              path=\"/stroke-disease-prediction\"\r\n              component={() => <StrokeDisease />}\r\n            />\r\n            <Route\r\n              path=\"/liver-disease-prediction\"\r\n              component={() => <LiverDisease />}\r\n            />\r\n            <Route render={() => <Redirect to=\"/heart-disease-prediction\" />} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import \"./App.css\";\r\nimport Main from \"./components/Main\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}